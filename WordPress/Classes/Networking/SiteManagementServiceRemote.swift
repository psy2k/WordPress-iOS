import Foundation
import AFNetworking

/// SiteManagementServiceRemote handles REST API calls for managing a WordPress.com site.
///
public class SiteManagementServiceRemote : ServiceRemoteREST
{
    /// Deletes the specified WordPress.com site.
    ///
    /// - Parameters:
    ///    - siteID:  The WordPress.com ID of the site.
    ///    - success: Optional success block with no parameters
    ///    - failure: Optional failure block with NSError
    ///
    public func deleteSite(siteID: NSNumber, success: (() -> Void)?, failure: (NSError -> Void)?) {
        let endpoint = "sites/\(siteID)/delete"
        let path = self.pathForEndpoint(endpoint, withVersion: ServiceRemoteRESTApiVersion_1_1)

        api.POST(path,
            parameters: nil,
            success: { operation, response in
                guard let results = response as? [String: AnyObject] else {
                    failure?(DeleteError.InvalidResponse.toNSError())
                    return
                }
                guard let status = results[ResultKey.Status] as? String else {
                    failure?(DeleteError.MissingStatus.toNSError())
                    return
                }
                guard status == ResultValue.Deleted else {
                    failure?(DeleteError.NotDeleted.toNSError())
                    return
                }
                
                success?()
            },
            failure: { operation, error in
                failure?(error)
            })
    }
    
    /// Keys found in API results
    ///
    private struct ResultKey
    {
        static let Status = "status"
    }

    /// Values found in API results
    ///
    private struct ResultValue
    {
        static let Deleted = "deleted"
    }

    /// Errors generated by this class whilst parsing API results
    ///
    enum DeleteError: ErrorType, CustomStringConvertible
    {
        case InvalidResponse
        case MissingStatus
        case NotDeleted
        
        var description: String {
            return NSLocalizedString("The site could not be deleted.", comment: "Message shown when site deletion API failed")
        }
        
        func toNSError() -> NSError {
            return NSError(domain: _domain, code: _code, userInfo: [NSLocalizedDescriptionKey: String(self)])
        }
    }
}
